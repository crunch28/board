<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="customAccessDenied"
		class="org.zerock.security.CustomAccessDeniedHandler"></bean>

	<!-- <bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"></bean> -->

	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

	<bean id="customUserDetailsService"
		class="org.zerock.security.CustomUserDetailsService"></bean>
	<!-- <bean id="customPasswordEncoder" class="org.zerock.security.CustomNoOpPasswordEncoder"></bean> -->

	<security:http auto-config="true" use-expressions="true">
		<!-- 접근 설정 -->
		<security:intercept-url pattern="/sample/all"
			access="permitAll" />

		<security:intercept-url
			pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />

		<security:intercept-url pattern="/sample/admin"
			access="hasRole('ROLE_ADMIN')" />

		<!-- 로그인 페이지 -->
		<!--login-page 속성은 무조건 get방식 -->
		<security:form-login login-page="/customLogin" />

		<!-- 로그아웃 페이지 -->
		<security:logout logout-url="/customLogout"
			invalidate-session="true" /> <!-- 로그아웃 실행 -->

		<!-- 에러페이지 -->
		<!-- <security:access-denied-handler error-page="/accessError" /> -->
		<security:access-denied-handler
			ref="customAccessDenied" />


		<!-- 로그인 유지 -->
		<security:remember-me
			data-source-ref="dataSource" token-validity-seconds="604800" />

		<!-- 로그아웃 쿠키삭제 -->
		<security:logout logout-url="/customLogout"
			invalidate-session="true" delete-cookies="remember-me,JSECCION_ID" />
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<!-- DB권한부여 -->
			<!-- <security:jdbc-user-service data-source-ref="dataSource" /> 스프링 제공 
				db -->

			<!-- 직접만든 회원 테이블 조회 -->
			<!-- <security:jdbc-user-service data-source-ref="dataSource" users-by-username-query="select 
				userid, userpw, enabled from tbl_member where userid=?" authorities-by-username-query="select 
				userid, auth from tbl_member_auth where userid=?" /> -->

			<security:password-encoder
				ref="bcryptPasswordEncoder" />

			<!-- <security:password-encoder ref="customPasswordEncoder" /> -->

			<!-- 권한부여 -->
			<!-- <security:user-service> <security:user name="member" password="{noop}member" 
				authorities="ROLE_MEMBER" /> <security:user name="admin" password="{noop}admin" 
				authorities="ROLE_MEMBER, ROLE_ADMIN" /> </security:user-service> -->
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
